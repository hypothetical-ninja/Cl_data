x <- list(2,"a","b",TRUE)
x[[2]]
x <- 1:4
y<-2:3
x+y
x<-c(3,5,1,10,12,6)
x[x %in% 1:5]<-0
x
x<-c(4,TRUE)
class(x)
x<-c(17,14,4,5,13,12,10)
x[x>10]<-4
hw1_data <- read.csv("F:/Computing for Data Analysis/Assignment 1/hw1_data/hw1_data.csv")
View(hw1_data)
a <-hw1_data[1:2,:]
a=hw1_data[1:2,:]
a <- hw1_data[1:2,]
View(a)
dim(hw1_data)
help(tail)
View(hw1_data)
is.na("Ozone")
x <- hw1_data[1,]
x<- hw1_data[,1]
x
sum(is.na(x))
b <- mean(x , NA.rm=TRUE)
b
b <- mean(x , NA.rm=FALSE)
b
new <- na.omit(x)
new
mean(new)
y <- hw1_data[which(Ozone>31 & Temp>90),]
y <- hw1_data[which(Ozone>31 & Temp>90),]
y1 <- subset(hw1_data , Ozone > 31 & Temp >90)
mean(y1$Solar.R)
View(`y1`)
y2 <- subset(hw1_data , Month==6)
View(`y2`)
mean(y2$Temp)
y3 <- subset(hw1_data , Month ==5)
View(`y3`)
max(y3$Ozone)
y4 <- na.omit(y3)
View(`y4`)
max(y4$Ozone)
setwd (C:\Users\SAIF\Documents)
setwd(C:\Users\SAIF\Documents)
setwd(C:/Users/SAIF/Documents)
setwd("C:/Users/SAIF/Documents")
source("getmonitor.R")
my_data <- getmonitor(50,"specdata",True)
View(my_data)
head(my_data)
source("getmonitor.R")
my_data <- getmonitor9(90,"specdata",TRUE)
my_data <- getmonitor(90,"specdata",TRUE)
source("getmonitor.R")
my_data <- getmonitor(90,"specdata",TRUE)
cwd
wd
cd
cwd()
setwd("C:/Users/SAIF/Documents")
my_data <-getmonitor("100","specdata",TRUE)
my_data <-getmonitor(100,"specdata",TRUE)
source("getmonitor.R")
setwd("C:/Users/SAIF/Documents/")
source("getmonitor.R")
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
getmonitor.testscript()
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
getmonitor.testscript()
source('~/getmonitor.R')
source('~/getmonitor.R')
getmonitor(100,"specdata",TRUE)
source('~/getmonitor.R')
getmonitor(100,"specdata",TRUE)
source('~/getmonitor.R')
getmonitor(100,"specdata",TRUE)
source('~/getmonitor.R')
getmonitor(100,"specdata",TRUE)
source('~/getmonitor.R')
getmonitor(100,"specdata",TRUE)
source('~/getmonitor.R')
source('~/getmonitor.R')
getmonitor(100,"specdata",TRUE)
source('~/getmonitor.R')
a <- sprintf("C:/Users/SAIF/Documents/specdata/%04s.csv",id2)
source("getmonitor.R")
getmonitor(100,"specdata",TRUE)
source("getmonitor.R")
getmonitor(100,"specdata",TRUE)
source('~/getmonitor.R')
source("getmonitor.R")
getmonitor(100,"specdata",TRUE)
getmonitor(95,"specdata",TRUE)
source("getmonitor.R")
getmonitor(100,"specdata",TRUE)
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
getmonitor.testscript()
source("getmonitor.R")
getmonitor(100,"specdata",TRUE)
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
getmonitor.testscript()
source("getmonitor.R")
getmonitor(5,"specdata",FALSE)
getmonitor(5,"specdata",FALSE)
getmonitor(11,"specdata",FALSE)
source('~/getmonitor.R')
getmonitor(11,"specdata",FALSE)
source('~/getmonitor.R')
getmonitor(11,"specdata",FALSE)
source('~/getmonitor.R')
source('~/getmonitor.R')
source('~/getmonitor.R')
getmonitor(11,"specdata",FALSE)
getmonitor(5,"specdata",FALSE)
source('~/getmonitor.R')
getmonitor(5,"specdata",FALSE)
getmonitor(111,"specdata",FALSE)
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
getmonitor.testscript()
source('~/getmonitor.R')
source('~/getmonitor.R')
getmonitor("100","specdata",TRUE)
setwd("C:/Users/SAIF/Documents")
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
getmonitor.testscript()
source('~/complete.R')
source('~/complete.R')
source('~/complete.R')
source('~/complete.R')
source('~/complete.R')
source('~/complete.R')
source(getmonitor.R)
setwd("C:/Users/SAIF/Documents")
source("getmonitor.R")
complete("specdata",12)
source('~/complete.R')
complete("specdata",12)
source('~/complete.R')
complete("specdata",12)
dim(data)
source('~/complete.R')
dim(data)
dim(id)
data <- (matrix(ncol=2,nrow=length(id)))
id = 1:332
data <- (matrix(ncol=2,nrow=length(id)))
dim(data)
x =[1 2 3 4 NA 5 7 8 NA]
x <-[1 2 3 4 NA 5 7 8 NA]
x <-c(1 2 3 4 NA 5 7 8 NA)
ab <- c(1, 2, 3, 4, NA, 5, 7, 8, NA)
lom <- ab[complete.cases(ab), ]
lom <- ab[complete.cases(ab)]
lom
len[lom]
len(lom)
nrow(lom)
ncol(lom)
source('~/complete.R')
data <- (matrix(ncol=2,nrow=length(id),dimnames=list(NULL,c("id","nobs"))))
data
source('~/complete.R')
source('~/complete.R')
source("getmonitor.R")
complete("specdata", 1:332)
complete("specdata", id)
source("http://spark-public.s3.amazonaws.com/compdata/scripts/complete-test.R")
complete.testscript()
source('~/complete.R')
source('~/complete.R')
complete("specdata",1:4)
source('C:/Users/SAIF/Desktop/complete.R')
setwd('C:/Users/SAIF/Documents')
source('~/complete.R')
source('getmonitor.R')
complete("specdata",1:10)
source("http://spark-public.s3.amazonaws.com/compdata/scripts/complete-test.R")
complete.testscript()
source('~/complete.R')
source("getmonitor.R")
complete("specdata",1:10)
source('~/complete.R')
complete("specdata",1:10)
complete("specdata",1:332)
source('~/complete.R')
complete("specdata",1:332)
source('~/corr.R')
setwd('C:/Users/SAIF/Documents/')
getcwd
getcd
cd
getwd()
source('~/count.R')
source('~/count.R')
count<- function(cause = NULL){
homicides <- readLines("homicides.txt")
r <- regexec("<dd>[C|c]ause: (.*?)</dd>", homicides)
m <- regmatches(homicides, r)
cause1 <- sapply(m, function(x) tolower(x[2]))
a <- length(grep("shooting", cause, ignore.case=TRUE))
b <- length(grep("blunt force", cause, ignore.case=TRUE))
c <- length(grep("other", cause, ignore.case=TRUE))
d <- length(grep("asphyxiation", cause, ignore.case=TRUE))
e <- length(grep("stabbing", cause, ignore.case=TRUE))
f <- length(grep("unknown", cause, ignore.case=TRUE))
if (cause == "shooting") {
return(a)
}
else if (cause == "other") {
return(c)
}}
source("http://spark-public.s3.amazonaws.com/compdata/scripts/submitscript4.R")
source("submitscript4.R")
submit()
submit()
source('~/count.R')
source('~/count.R')
count(shooting)
source('~/count.R')
count(cause=shooting)
count(cause="shooting")
count(cause="shooting")
source('~/count.R')
source('~/count.R')
count(cause="shooting")
source('~/count.R')
count(cause="shooting")
source('~/count.R')
count(cause="shooting")
submit()
submit()
source('~/count.R')
source('~/count.R')
source('~/count.R')
submit()
submit()
source('~/count.R')
source('~/agecount.R')
source('~/agecount.R')
source('~/agecount.R')
source('~/agecount.R')
source('~/agecount.R')
source('~/agecount.R')
source('~/agecount.R')
source('~/agecount.R')
source('~/agecount.R')
source('~/agecount.R')
source('~/agecount.R')
source('~/agecount.R')
source('~/agecount.R')
source('~/agecount.R')
source('~/agecount.R')
agecount(17)
source('~/agecount.R')
source('~/agecount.R')
agecount(17)
source('~/agecount.R')
agecount(17)
source('~/agecount.R')
agecount(17)
source('~/agecount.R')
agecount(17)
source('~/agecount.R')
agecount(17)
agecount(26)
source('~/agecount.R')
agecount(26)
agecount(17)
source('~/agecount.R')
agecount(17)
source('~/agecount.R')
source('~/agecount.R')
source('~/agecount.R')
source('~/agecount.R')
agecount(17)
agecount(26)
source('~/agecount.R')
submit()
submit()
source('~/agecount.R')
source('~/Qu2Q1.R')
source('~/Qu2Q1.R')
install.packages("httr")
source('~/Qu2Q1.R')
install.packages("httpuv")
install.packages("jsonlite")
help(content)
help(oauth_endpoints)
help(oauth_app)
help(oauth2.0_token)
help(stop_for_status)
source('~/Qu2Q1.R')
source('~/Qu2Q1.R')
source('~/Qu2Q1.R')
source('~/Qu2Q1.R')
source('~/Qu2Q1.R')
source('~/Qu2Q1.R')
source('~/Qu2Q1.R')
json2
source('~/Qu2Q1.R')
json2
source('~/Qu2Q1.R')
json2.head()
json2$created_at
json2$name==datasharingrepo
json2$name
source('~/Qu2Q1.R')
json2$name=="datasharing"
json2$name="datasharing"
source('~/Qu2Q1.R')
install.packages("sqldf")
getwd()
library(sqldf)
mydata = read.csv("getdata.csv")
a = sqldf("select pwgtp1 from acs where AGEP < 50")
library(sqldf)
acs = read.csv("getdata.csv")
a = sqldf("select pwgtp1 from acs where AGEP < 50")
a.head()
View(a)
View(acs)
library(sqldf)
acs = read.csv("getdata.csv")
sqldf("select * from acs where AGEP < 50 and pwgtp1")
View(a)
View(acs)
a = sqldf("select * from acs where AGEP < 50 and pwgtp1")
View(a)
a = sqldf("select distinct AGEP from acs")
acs = read.csv("getdata.csv")
a = sqldf("select distinct AGEP from acs")
View(a)
htmlcode[20]
con[20]
htmlcode = readLines(con)
con[20,]
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlcode = readLines(con)
con[20,]
con[20]
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlcode = readLines(con)
nchar(html[20], type="chars")
htmlcode = readLines(con)
nchar(htmlcode[20], type="chars")
nchar(htmlcode[10], type="chars")
nchar(htmlcode[30], type="chars")
nchar(htmlcode[100], type="chars")
df2 = read.table("getdata0.for", header=TRUE)
df2 = read.table("getdata0.for", header=TRUE)
df2 = read.table("getdata0.for", header=FALSE)
df2 = read.fwf("getdata1.for",widths = 5,header = True )
df2 = read.fwf("getdata1.for",widths = 5,header = TRUE )
View(df2)
df2 = read.fwf("getdata1.for",widths = 5,header = TRUE,sep = "\t\t\t\t\t" )
df2 = read.fwf("getdata1.for",widths = 5,header = TRUE,sep = "\t" )
View(df2)
df2 = read.fwf("getdata1.for",widths = 9,header = TRUE,sep = "\t" )
df2 = read.fwf("getdata1.for",width = 9,header = TRUE,sep = "\t" )
df2 = read.fwf("getdata1.for",width = 9 )
df2 = read.fwf("getdata1.for",widths = c(9,-5,4,-1,3,-5,4,-1,3,-5,4,-1,3,-5,4,-1,3))
View(df2)
View(df2)
source('~/tidwid.R')
source('~/tidwid.R')
View(mtcars)
source('~/tidwid.R')
View(narrow)
source('~/tidwid.R')
View(wide1)
source('~/tidwid.R')
cwd
getwd
getwd()
data0 = read.csv("getdata3.csv")
View(data0)
data1 <- data0[data0$ACR==3 & data0$AGS==6]
data1 <- data0[data0$ACR==3 && data0$AGS==6]
View(data1)
View(data1)
data1 = data0[data0$ACR==3 && data0$AGS==6]
data1 = data0[which(data0$ACR==3 && data0$AGS==6)]
data1 <- data0[which(data0$ACR==3 && data0$AGS==6)]
data0 = read.csv("getdata3.csv")
data1 <- data0[which(data0$ACR==3 && data0$AGS==6)]
data1 <- data0[which(data0$ACR==3 && data0$AGS==6),]
View(data1)
data1 <- data0[,which(data0$ACR==3 && data0$AGS==6)]
View(data1)
data1 <- data0[,which(data0$ACR==3 & data0$AGS==6)]
data1 <- data0[which(data0$ACR==3 && data0$AGS==6),data0]
data1 <- data0[which((data0$ACR==3 && data0$AGS==6),data0)]
data1 <- data0((data0$ACR==3 && data0$AGS==6),data0)
data0 = read.csv("getdata3.csv")
data1 <- data0((data0$ACR==3 && data0$AGS==6),data0)
data1 <- data0[(data0$ACR==3 && data0$AGS==6),data0]
data1 <- data0[(data0$ACR==3 && data0$AGS==6),
data12 <- data0[(data0$ACR==3 && data0$AGS==6),
data12 <- data0[(data0$ACR==3 && data0$AGS==6)
data0 = read.csv("getdata3.csv")
data0 = read.csv("getdata3.csv")
data12 <- data0[(data0$ACR==3 && data0$AGS==6)]
View(data12)
data12 <- data0[(data0$ACR==3 & data0$AGS==6)]
data12 <- data0[(data0$ACR==3 & data0$AGS==6),]
head(data12)
data0 = read.csv("getdata3.csv")
data12 <- data0[which(data0$ACR==3 & data0$AGS==6),]
View(data12)
install.packages("jpeg")
library(jpeg)
image<-readJPEG("image.jpg", native=TRUE)
summary(image)
quantile(image, probs = c(.3,.8))
my_data = read.csv("getdata4.csv")
my_data1 = read.csv("getdata5.csv")
View(my_data1)
View(my_data)
my_data2 <- merge(getdata4,getdata5,by.x="X",by.y="CountryCode")
my_data2 <- merge(my_data,my_data1,by.x="X",by.y="CountryCode")
View(my_data2)
my_data2 <- merge(my_data,my_data1,by.x="X",by.y="CountryCode",all=FALSE)
View(my_data2)
my_data0 = na.omit(my_data1)
View(my_data0)
gross_data = read.csv("getdata4.csv")
edu_data = read.csv("getdata5.csv")
View(edu_data)
View(gross_data)
a <-read.table("getdata4.csv",header = True, nrows= 5)
a <-read.table("getdata4.csv",header = TRUE, nrows= 5)
a <-read.table("getdata4.csv",header = TRUE, nrows= 5:10)
classes<- sapply(a,class)
gross_data = read.csv("getdata4.csv",header = TRUE, colClasses= classes)
gross_data$X.3 = gsub(",","")
gross_data$X.3 = gsub(",","",gross_data$X.3)
View(gross_data)
gross_data$Gdpnum = gsub(",","",gross_data$X.3)
gross_data = read.csv("getdata4.csv",header = TRUE, stringAsFactors= FALSE)
gross_data = read.csv("getdata4.csv",header = TRUE, stringsAsFactors= FALSE)
gross_data$Gdpnum = gsub(",","",gross_data$X.3)
View(gross_data)
myvars <- names(mydata) %in% c("X", "Gross.domestic.product.2012", "X.2","Gdpnum")
edu_data = read.csv("getdata5.csv")
myvars <- names(gross_data) %in% c("X", "Gross.domestic.product.2012", "X.2","Gdpnum")
gross_data2 <- gross_data[myvars]
View(gross_data2)
gross_data3 <- gross_data2[5:194,]
View(gross_data3)
gross_data3 <- as.numeric(gross_data3$Gross.domestic.product.2012)
View(my_data1)
combined_data <- merge(gross_data3,edu_data,by.x="X",by.y="CountryCode",all=FALSE)
gross_data = read.csv("getdata4.csv",header = TRUE, stringsAsFactors= FALSE)
gross_data$Gdpnum = gsub(",","",gross_data$X.3)
edu_data = read.csv("getdata5.csv")
myvars <- names(gross_data) %in% c("X", "Gross.domestic.product.2012", "X.2","Gdpnum")
gross_data2 <- gross_data[myvars]
gross_data3 <- gross_data2[5:194,]
gross_data3 <- as.numeric(gross_data3$Gross.domestic.product.2012)
combined_data <- merge(gross_data3,edu_data,by.x="row",by.y="CountryCode",all=FALSE)
setwd("C:\Users\SAIF\Documents\cl_assignment\test")
setwd("C:\\Users\\SAIF\\Documents\\cl_assignment\\test")
clear()
clear
Xtrain1 = read.table("X_train.txt")
Xtest1 = read.table("X_test.txt")
Xtest1 = read.table("X_test.txt")
Xtrain1 <- read.table("X_train.txt")
Xtest1 <- read.table("X_test.txt")
View(Xtest1)
X_data <- merge(Xtrain1,Xtest1)
X_data <- rbind(Xtrain1,Xtest1,)
X_data <- rbind(Xtrain1,Xtest1)
View(X_data)
Ytrain1 <- read.table("y_train.txt")
Ytest1 <- read.table("y_test.txt")
Y_data <- rbind(Ytrain1,Ytest1)
View(Y_data)
View(Y_data)
View(Xtrain1)
Strain1 <- read.table("subject_train.txt")
Stest1 <- read.table("subject_test.txt")
Y_data <- rbind(Strain1,Stest1)
S_data <- rbind(Strain1,Stest1)
Y_data <- rbind(Ytrain1,Ytest1)
View(S_data)
Xtrain1 <- read.table("X_train.txt")
Ytrain1 <- read.table("y_train.txt")
Xtest1 <- read.table("X_test.txt")
Ytest1 <- read.table("y_test.txt")
train_data <- cbind(Xtrain1,Ytrain1)
test_data <- rbind(Xtest1,Ytest1)
test_data <- cbind(Xtest1,Ytest1)
View(train_data)
head(train_data)
train_data <- cbind(Ytrain1,Xtrain1)
test_data <- cbind(Ytest1,Xtest1)
View(train_data)
